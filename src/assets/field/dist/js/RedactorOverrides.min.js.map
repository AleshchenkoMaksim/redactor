{"version":3,"sources":["RedactorOverrides.js"],"names":["imageResizeClass","$R","prototype","_setResizerPosition","this","$resizer","toolbar","isTarget","$target","offset","pos","$resizableImage","width","height","resizerWidth","resizerHeight","css","top","left","_build","e","find","remove","data","inspector","parse","target","$editor","editor","getElement","isComponentType","$resizableBox","dom","getImageElement","attr","z-index","append","on","_set","bind","hide","off","rebuild","toolbarFixedClass","livePreview","$previousFixedTarget","_init","$fixedTarget","getTargetElement","$win","_doFixed","uuid","attachLivePreview","$","length","detachLivePreview","Garnish","Craft","Preview","LivePreview","$container","container","$toolbar","$wrapper","getWrapper","isSourceMode","parents","filter","node","getComputedStyle","display","isHeight","isEmpty","reset","pinIt","toolbarHeight","pinDistance","headerBuffer","bottomFromScreenTop","distanceFromScreenTop","scrollTop","position","detector","isDesktop","scrollOffset","boxOffset","opts","toolbarFixedTopOffset","isMobile","fixedScrollTimeout","clearTimeout","setTimeout","show","addClass","dropdown","getDropdown","updatePosition","app","broadcast","inputCleanerService","input","html","paragraphize","started","encodePreCode","replace","create","convert","convertRules","storeComponents","replaceTags","_setSpanAttr","_setStyleCache","removeTags","deniedTags","_removeScriptTag","_replaceScriptTag","removeComments","_isSpacedEmpty","emptyHtml","restoreComponents","_cleanWrapped","utils","buildWrapper","imageattrs","each","attributes","attrs","i","name","search","indexOf","removeAttribute","getWrapperHtml"],"mappings":"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","file":"RedactorOverrides.min.js","sourcesContent":["// Adjust the positioning of image resizer\n// =============================================================================\n\nvar imageResizeClass = $R['classes']['image.resize'];\n\n// Position the image resizer correctly\nimageResizeClass.prototype._setResizerPosition = function () {\n    if (this.$resizer)\n    {\n        var isTarget = this.toolbar.isTarget();\n        var targetOffset = this.$target.offset();\n        var offsetFix = 7;\n        var topOffset = offsetFix;\n        var leftOffset = offsetFix;\n        var pos = this.$resizableImage.offset();\n        var width = this.$resizableImage.width();\n        var height = this.$resizableImage.height();\n        var resizerWidth =  this.$resizer.width();\n        var resizerHeight =  this.$resizer.height();\n\n        this.$resizer.css({ top: (pos.top + height - resizerHeight + topOffset) + 'px', left: (pos.left + width - resizerWidth + leftOffset) + 'px' });\n    }\n};\n\n// When scrolling, reposition the resizer\nimageResizeClass.prototype._build = function (e) {\n    this.$target.find('#redactor-image-resizer').remove();\n\n    var data = this.inspector.parse(e.target);\n    var $editor = this.editor.getElement();\n\n    if (data.isComponentType('image'))\n    {\n        this.$resizableBox = $editor;\n        this.$resizableImage = $R.dom(data.getImageElement());\n\n        this.$resizer = $R.dom('<span>');\n        this.$resizer.attr('id', 'redactor-image-resizer');\n        this.$resizer.css({'z-index': 100});\n\n        this.$target.append(this.$resizer);\n\n        this._setResizerPosition();\n        this.$resizer.on('mousedown touchstart', this._set.bind(this));\n\n        if (this.toolbar.isTarget()) {\n            // this.$target.on('scroll.resizer', this.rebuild.bind(this));\n        } else {\n            // $R.dom('#content-container').on('scroll.resizer', this.rebuild.bind(this));\n        }\n    }\n};\n// Stop listening to scroll\nimageResizeClass.prototype.hide = function () {\n    this.$target.find('#redactor-image-resizer').remove();\n    if (this.toolbar.isTarget()) {\n        this.$target.off('scroll.resizer', this.rebuild.bind(this));\n    } else {\n        $R.dom('#content-container').off('scroll.resizer', this.rebuild.bind(this));\n    }\n};\n\n// Adjust the positioning of fixed toolbar\n// =============================================================================\n\nvar toolbarFixedClass = $R['classes']['toolbar.fixed'];\n\ntoolbarFixedClass.prototype.livePreview = false;\ntoolbarFixedClass.prototype.$previousFixedTarget = false;\n\ntoolbarFixedClass.prototype._init = function() {\n    this.$fixedTarget = (this.toolbar.isTarget()) ? this.toolbar.getTargetElement() : this.$win;\n    this._doFixed();\n\n    if (this.toolbar.isTarget())\n    {\n        this.$win.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n        this.$win.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n    }\n\n    this.$fixedTarget.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n    this.$fixedTarget.on('resize.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n\n    var attachLivePreview = () => {\n        var $editor = $('.lp-editor');\n        if ($editor.length) {\n            this.livePreview = true;\n            this.$previousFixedTarget = this.$fixedTarget;\n            $editor = $R.dom($editor[0]);\n            $editor.on('scroll.redactor-toolbar-' + this.uuid, this._doFixed.bind(this));\n            this.$fixedTarget = $editor;\n        }\n    };\n\n    var detachLivePreview = () => {\n        this.livePreview = false;\n        this.$fixedTarget = this.$previousFixedTarget;\n        this.$previousFixedTarget = null;\n    }\n\n    Garnish.on(Craft.Preview, 'open', attachLivePreview);\n    Garnish.on(Craft.LivePreview, 'enter', attachLivePreview);\n\n    Garnish.on(Craft.Preview, 'close', detachLivePreview);\n    Garnish.on(Craft.LivePreview, 'exit', detachLivePreview);\n};\n\ntoolbarFixedClass.prototype._doFixed = function() {\n    var $editor = this.editor.getElement();\n    var $container = this.container.getElement();\n    var $toolbar = this.toolbar.getElement();\n    var $wrapper = this.toolbar.getWrapper();\n\n    if (this.editor.isSourceMode())\n    {\n        return;\n    }\n\n    var $targets = $container.parents().filter(function(node)\n    {\n        return (getComputedStyle(node, null).display === 'none') ? node : false;\n    });\n\n    // has hidden parent\n    if ($targets.length !== 0) return;\n\n    var isHeight = ($editor.height() < 100);\n    var isEmpty = this.editor.isEmpty();\n\n    if (isHeight || isEmpty) {\n        this.reset();\n        return;\n    }\n\n    var toolbarHeight = $toolbar.height();\n\n    var pinIt = false;\n    var pinDistance = 0;\n    var tolerance = 20;\n\n    if (this.livePreview) {\n        var headerBuffer = $('.lp-editor-container header.flex').length ? $('.lp-editor-container header.flex').height() : 0;\n        var distanceFromScreenTop = $editor.offset().top - headerBuffer;//$('.lp-editor').scrollTop() + headerBuffer + ($editor.parent().offset().top - $editor.offset().top);\n        var bottomFromScreenTop = distanceFromScreenTop + $editor.height() - toolbarHeight;\n    } else {\n        var headerBuffer = $('body.fixed-header #header').length ? $('body.fixed-header #header').height() : 0;\n        var distanceFromScreenTop = $editor.offset().top - this.$win.scrollTop() - headerBuffer;\n        var bottomFromScreenTop = distanceFromScreenTop + $editor.height() - toolbarHeight;\n    }\n\n    pinIt = distanceFromScreenTop  + tolerance < 0 && bottomFromScreenTop > 0;\n    pinDistance = $editor.scrollTop() + headerBuffer + tolerance;\n\n    // Figure out when to pin the toolbar\n    \n    if (pinIt)\n    {\n        var position = (this.detector.isDesktop()) ? 'fixed' : 'absolute';\n        pinDistance = (this.detector.isDesktop()) ? pinDistance : (scrollOffset - boxOffset + this.opts.toolbarFixedTopOffset);\n\n        if (this.detector.isMobile())\n        {\n            if (this.fixedScrollTimeout)\n            {\n                clearTimeout(this.fixedScrollTimeout);\n            }\n\n            $toolbar.hide();\n            this.fixedScrollTimeout = setTimeout(function()\n            {\n                $toolbar.show();\n            }, 250);\n        }\n\n        $wrapper.height(toolbarHeight);\n        $toolbar.addClass('redactor-toolbar-fixed');\n        $toolbar.css({\n            position: position,\n            top: (pinDistance + this.opts.toolbarFixedTopOffset) + 'px',\n            width: $container.width() + 'px'\n        });\n\n        var dropdown = this.toolbar.getDropdown();\n        if (dropdown) dropdown.updatePosition();\n\n        this.app.broadcast('toolbar.fixed');\n    }\n    else\n    {\n        this.reset();\n        this.app.broadcast('toolbar.unfixed');\n    }\n};\n\nvar inputCleanerService = $R['services']['cleaner'];\n\ninputCleanerService.prototype.input = function(html, paragraphize, started)\n{\n    // pre/code\n    html = this.encodePreCode(html);\n\n    // converting entity\n    html = html.replace(/\\$/g, '&#36;');\n    html = html.replace(/&amp;/g, '&');\n\n    // convert to figure\n    var converter = $R.create('cleaner.figure', this.app);\n    html = converter.convert(html, this.convertRules);\n\n    // store components\n    html = this.storeComponents(html);\n\n    // clean\n    html = this.replaceTags(html, this.opts.replaceTags);\n    html = this._setSpanAttr(html);\n    html = this._setStyleCache(html);\n    html = this.removeTags(html, this.deniedTags);\n    html = (this.opts.removeScript) ? this._removeScriptTag(html) : this._replaceScriptTag(html);\n    //html = (this.opts.removeScript) ? this._removeScriptTag(html) : html;\n    html = (this.opts.removeComments) ? this.removeComments(html) : html;\n    html = (this._isSpacedEmpty(html)) ? this.opts.emptyHtml : html;\n\n    // restore components\n    html = this.restoreComponents(html);\n\n    // clear wrapped components\n    html = this._cleanWrapped(html);\n\n    // remove image attributes\n    var $wrapper = this.utils.buildWrapper(html);\n    var imageattrs = ['alt', 'title', 'src', 'class', 'width', 'height', 'srcset', 'style'];\n    $wrapper.find('img').each(function(node) {\n        if (node.attributes.length > 0) {\n            var attrs = node.attributes;\n            for (var i = attrs.length - 1; i >= 0; i--) {\n                if (attrs[i].name.search(/^data\\-/) === -1 && imageattrs.indexOf(attrs[i].name) === -1) {\n                    node.removeAttribute(attrs[i].name);\n                }\n            }\n        }\n    });\n\n    // get wrapper html\n    html = this.utils.getWrapperHtml($wrapper);\n\n    // paragraphize\n    html = (paragraphize) ? this.paragraphize(html) : html;\n\n    return html;\n}\n"]}